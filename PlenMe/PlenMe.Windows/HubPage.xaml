<Page
    x:Name="pageRoot"
    x:Class="PlenMe.HubPage"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:PlenMe"
    xmlns:helpers="using:PlenMe.Helpers"
    xmlns:data="using:PlenMe.Data"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
        <Style  TargetType="Button">
            <Setter Property="Transitions">
                <Setter.Value>
                    <TransitionCollection>
                        <EntranceThemeTransition/>
                    </TransitionCollection>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Grid-appropriate 310 by 260 pixel item template as seen in section 4 -->
        <DataTemplate x:Key="Standard310x260ItemTemplate">
            <Grid Height="250" Width="310" Margin="5,10,5,10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Border Background="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}" Height="150">
                    <Image Source="{Binding ImagePath}" Stretch="UniformToFill" AutomationProperties.Name="{Binding Title}"/>
                </Border>
                <StackPanel Grid.Row="1" Margin="0,10,0,0">
                    <TextBlock Text="{Binding Title}" Style="{StaticResource TitleTextBlockStyle}" TextWrapping="NoWrap"/>
                    <TextBlock Text="{Binding Description}" Style="{StaticResource BodyTextBlockStyle}" MaxHeight="60" />
                </StackPanel>

            </Grid>
        </DataTemplate>
        <helpers:WebContentConverter x:Key="WebContentConverter" />
        <helpers:WebViewContentConverter x:Key="WebViewContentConverter" />
    </Page.Resources>
    <Page.BottomAppBar>
        <CommandBar>
            <AppBarButton Label="Add sibling" Icon="Add" Click="AddSiblingNode"/>
            <AppBarButton Label="Add child" Icon="Add" Click="AddChildNode"/>
            <AppBarButton Label="Edit node" Icon="Edit" Click="EditNode"/>
            <AppBarButton Label="Delete node" Icon="Delete" Click="DeleteNode"/>
            <AppBarButton Label="Move up" Icon="MoveToFolder" Click="MoveUp"/>
            <AppBarButton Label="Move downup" Icon="Delete" Click="MoveDown"/>
            <CommandBar.SecondaryCommands>
                <AppBarButton Label="Edit" Icon="Edit" Click="EditNode"/>
                <AppBarButton Label="Remove" Icon="Remove" Click="EditNode"/>
                <AppBarButton Label="Add" Icon="Add" Click="EditNode"/>
            </CommandBar.SecondaryCommands>
        </CommandBar>
    </Page.BottomAppBar>

    <!--
    This grid acts as a root panel for the page.
  -->
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ChildrenTransitions>
            <TransitionCollection>
                <EntranceThemeTransition/>
            </TransitionCollection>
        </Grid.ChildrenTransitions>
        <Hub SectionHeaderClick="Hub_SectionHeaderClick">
            <Hub.Header>
                <!-- Back button and page title -->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Button  x:Name="backButton" Style="{StaticResource NavigationBackButtonNormalStyle}"
                        Margin="0,0,39,0" 
                        VerticalAlignment="Top"
                        Command="{Binding NavigationHelper.GoBackCommand, ElementName=pageRoot}"
                        AutomationProperties.Name="Back"
                        AutomationProperties.AutomationId="BackButton"
                        AutomationProperties.ItemType="Navigation Button"/>
                    <TextBlock DataContext="{Binding MindMap}" x:Name="pageTitle" Text="{Binding Name}" Style="{StaticResource HeaderTextBlockStyle}" Grid.Column="1" 
                        VerticalAlignment="Top" IsHitTestVisible="false" TextWrapping="NoWrap" />
                </Grid>
            </Hub.Header>
            <HubSection Margin="0,0,0,0" >
                <DataTemplate>
                    <Grid >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="0"></RowDefinition>
                        </Grid.RowDefinitions>
                        <ProgressBar x:Name="progress" IsIndeterminate="True" Height="10" Width="200"/>
                        <ListView ItemsSource="{Binding ParentList}" SelectionMode="Single" SelectionChanged="Parent_Selected"  Height="300" SelectedValue="{Binding ParentSelected}" >
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Vertical" Margin="5">
                                        <TextBlock FontWeight="Bold"  Text="{Binding Title}"></TextBlock>
                                        <TextBlock TextWrapping="Wrap"   Text="{Binding Description}"></TextBlock>
                                    </StackPanel>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                        <ListView Grid.Column="1" ItemsSource="{Binding ChildList}" x:Name="childListView" SelectionChanged="Child_Selected" Height="300" SelectedValue="{Binding ChildSelected}"  >
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Vertical" Margin="5">
                                        <TextBlock  FontWeight="Bold"  Text="{Binding Title}"></TextBlock>
                                        <TextBlock TextWrapping="Wrap" Text="{Binding Description}"></TextBlock>
                                    </StackPanel>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                        <ListView Grid.Column="2" ItemsSource="{Binding SubChildList}" SelectionChanged="SubChild_Selected"  Height="300"  SelectedValue="{Binding SubChildSelected}" >
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Vertical" Margin="5">
                                        <TextBlock  FontWeight="Bold"   Text="{Binding Title}"></TextBlock>
                                        <TextBlock  TextWrapping="Wrap"  Text="{Binding Description}"></TextBlock>
                                    </StackPanel>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                        <StackPanel Grid.Row="1" Grid.ColumnSpan="4" HorizontalAlignment="Left" Margin="5" Orientation="Horizontal">
                            <Button Content="Edit" Click="EditNode" />
                            <Button Content="Add sibling" Click="AddSiblingNode" />
                            <Button Content="Add child" Click="AddChildNode" />
                            <Button Content="Up" Click="Up" />
                            <Button Content="Save" Click="Save" />
                            <Button Content="Delete" Click="DeleteNode" />
                            <Button Content="EditContent" Click="EditContent" />
                            <Button Content="Move up" Click="MoveUp" />
                            <Button Content="Move down" Click="MoveDown" />
                            <Button Content="Order up" Click="MoveOrderUp" />
                            <Button Content="Order down" Click="MoveOrderDown" />
                            <Button Content="+" Click="ZoomIn" />
                            <Button Content="-" Click="ZoomOut" />
                            <Slider Margin="8" Width="100" ValueChanged="ZoomSlider_ValueChanged" Maximum="400" Minimum="70" Value="180"   >
                            </Slider>
                        </StackPanel>

                    </Grid>
                </DataTemplate>
            </HubSection>
        </Hub>
        <Popup x:Name="editNodePopup" IsOpen="False" IsLightDismissEnabled="True" DataContext="{Binding TargetNode}" >
            <Popup.ChildTransitions>
                <TransitionCollection>
                    <PaneThemeTransition />
                </TransitionCollection>
            </Popup.ChildTransitions>
            <Border BorderBrush="{StaticResource ApplicationForegroundThemeBrush}" BorderThickness="2" Background="{StaticResource ApplicationPageBackgroundThemeBrush}" Width="646">
                <Grid>
                    <Grid.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="Margin" Value="5" ></Setter>
                            <Setter Property="HorizontalAlignment" Value="Left"></Setter>

                            <Setter Property="FontSize" Value="26"></Setter>
                        </Style>
                        <Style TargetType="TextBox">
                            <Setter Property="Margin" Value="5"></Setter>
                            <Setter Property="Height" Value="30"></Setter>
                            <Setter Property="HorizontalAlignment" Value="Stretch" ></Setter>
                        </Style>
                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <TextBlock Text="Title" Margin="10" Foreground="White" />
                    <TextBox Grid.Column="1" TabIndex="0" x:Name="nodeTitle" Text="{Binding Mode=TwoWay,Path=Title}" ></TextBox>
                    <TextBlock Grid.Row="1"  Text="Description" Foreground="White" />
                    <TextBox  Grid.Row="1" TabIndex="1" Grid.Column="1" x:Name="nodeDescrition" Text="{Binding Mode=TwoWay,Path=Description}"   />
                    <Button Grid.Row="2" Grid.ColumnSpan="2" Margin="10,5,5,5" Click="EditContent" Foreground="White" Content="Edit content"/>
                    <Button Grid.Row="3" Click="NodeEditOK_Click" Margin="5,10,5,5"  Foreground="White"  Content="OK"/>
                </Grid>
            </Border>
        </Popup>

        <Popup Width="200" Height="200"   x:Name="editContentPopup" IsOpen="False" IsLightDismissEnabled="True" DataContext="{Binding NodeContent}">
            <Popup.ChildTransitions>
                <TransitionCollection >
                    <PaneThemeTransition />
                </TransitionCollection>
            </Popup.ChildTransitions>
            <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderBrush="{StaticResource ApplicationForegroundThemeBrush}" BorderThickness="2" Background="{StaticResource ApplicationPageBackgroundThemeBrush}" >
                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                    </Grid.RowDefinitions>
                    <WebView  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" DefaultBackgroundColor="#1D1D1D" Grid.Row="0" Tag="{Binding Data, Converter={StaticResource WebContentConverter},ConverterParameter='contentEditView'}"  x:Name="contentEditView"></WebView>

                    <StackPanel Grid.Row="1" Orientation="Horizontal">
                        <Button  Foreground="White" Click="ClosePopup" Content="OK"/>
                        <AppBarButton Click="Bold" Icon="Bold" Label="Bold"></AppBarButton>
                        <Slider Margin="8" Width="100" ValueChanged="ZoomSliderEditor_ValueChanged" Maximum="400" Minimum="70" Value="180"  ></Slider>

                    </StackPanel>
                </Grid>
            </Border>
        </Popup>
        <WebView Margin="5" HorizontalAlignment="Left" Grid.Row="1" Width="1200"  DataContext="{Binding NodeContent}"  MinHeight="200" DefaultBackgroundColor="#1D1D1D"  MinWidth="400" Tag="{Binding Data, Converter={StaticResource WebViewContentConverter},ConverterParameter='webView'}"  x:Name="webView"></WebView>
    </Grid>

</Page>
